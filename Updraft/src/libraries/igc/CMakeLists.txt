GET_FILENAME_COMPONENT(${LIBRARY_NAME} ${CMAKE_CURRENT_SOURCE_DIR} NAME)

cmake_minimum_required(VERSION 2.8)

PROJECT(${LIBRARY_NAME})
FIND_PACKAGE(Qt4 REQUIRED)
ADD_DEFINITIONS(${QT_DEFINITIONS})

FILE(GLOB LIBRARY_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB LIBRARY_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

INCLUDE(${QT_USE_FILE})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_DEFINITIONS(${QT_DEFINITIONS})
if(NOT WIN32)	# If it was set on win32 it also added no_debug to debug conf.
	ADD_DEFINITIONS(-DQT_NO_DEBUG)
ENDIF()
ADD_DEFINITIONS(-DQT_SHARED)
ADD_DEFINITIONS(-DQT_DLL)

# Following preprocessor definition is used for export/import macro.
ADD_DEFINITIONS(-DUPDRAFT_LIB_INTERNAL)

ADD_LIBRARY(
	${LIBRARY_NAME}
	SHARED
	${LIBRARY_SOURCES}
)

# Handling of output filenames and directories on Windows
IF(WIN32)
	# Sets properties for generic no-config case
	SET_TARGET_PROPERTIES(
		${LIBRARY_NAME}
		PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY ${WIN_UPDRAFT_BIN_DIR}
		DEBUG_POSTFIX d
	)

	# Sets output path for each config.
	foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
		string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
		SET_TARGET_PROPERTIES(
			${LIBRARY_NAME}
			PROPERTIES
			RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${WIN_UPDRAFT_BIN_DIR}
		)
	endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)
ENDIF(WIN32)

STYLE_CHECK(${LIBRARY_NAME} ${LIBRARY_SOURCES} ${LIBRARY_HEADERS})

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${QT_LIBRARIES})
INSTALL(
	TARGETS ${LIBRARY_NAME}
	DESTINATION ${CMAKE_BINARY_DIR}
	OPTIONAL
)

ADD_SUBDIRECTORY(tests)
